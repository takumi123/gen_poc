// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

enum UserRole {
  CLIENT
  ENGINEER
  ADMIN
}

model User {
  id              String     @id @default(cuid())
  email           String     @unique
  password        String     // ハッシュ化されたパスワード
  role            UserRole
  displayName     String
  profileImageUrl String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  // Relations
  projects        Project[]  // 企業が投稿したPoC案件
  proposals       Proposal[] // エンジニアが送信した提案
  sentMessages    Message[]  @relation("SentMessages")
}

enum ProjectStatus {
  OPEN
  IN_PROGRESS
  CLOSED
}

model Project {
  id          String        @id @default(cuid())
  userId      String        // 投稿した企業のユーザーID
  title       String
  description String
  budget      Int
  status      ProjectStatus @default(OPEN)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  // Relations
  user        User         @relation(fields: [userId], references: [id])
  proposals   Proposal[]
  contract    Contract?
}

enum ProposalStatus {
  SUBMITTED
  ACCEPTED
  REJECTED
}

model Proposal {
  id               String         @id @default(cuid())
  projectId        String
  engineerId       String
  proposalText     String
  proposedBudget   Int
  proposedTimeline String
  status           ProposalStatus @default(SUBMITTED)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt

  // Relations
  project          Project        @relation(fields: [projectId], references: [id])
  engineer         User           @relation(fields: [engineerId], references: [id])
  contract         Contract?
}

enum ContractStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}

model Contract {
  id              String         @id @default(cuid())
  projectId       String         @unique
  proposalId      String         @unique
  contractAmount  Int
  startDate       DateTime
  endDate         DateTime
  status          ContractStatus @default(ACTIVE)
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt

  // Relations
  project         Project        @relation(fields: [projectId], references: [id])
  proposal        Proposal       @relation(fields: [proposalId], references: [id])
  messages        Message[]
}

model Message {
  id          String   @id @default(cuid())
  contractId  String
  senderId    String
  messageBody String
  createdAt   DateTime @default(now())

  // Relations
  contract    Contract @relation(fields: [contractId], references: [id])
  sender      User     @relation("SentMessages", fields: [senderId], references: [id])
}
